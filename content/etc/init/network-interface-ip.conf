# network-interface - configure network device
#

description	"configure network device"

emits net-device-up
emits static-network-up

task

script
    set +e

    check_static() {
        for i in $(ifquery --allow auto --list); do
            test -e /run/network/ifup.$i || return 1
        done
        return 0
    }

    do_on_cmdline() {
        INTERFACE=$1

        [ -e /run/network ] || mkdir -p /run/network 

        [ ! -e /run/network/ifup.$INTERFACE ] || return 0
        touch /run/network/ifup.$INTERFACE
        grep "$INTERFACE=$INTERFACE" /run/network/ifstate || echo $INTERFACE=$INTERFACE >> /run/network/ifstate

        initctl emit -n net-device-up IFACE=$INTERFACE LOGICAL=$INTERFACE ADDRFAM=inet \
            METHOD=$(grep PROTO /run/net-$INTERFACE.conf | sed "s/'//g" | awk -F'=' '{print $2}')

        if check_static; then 
           mkdir /run/network/static-network-up-emitted \
                && initctl emit -n static-network-up 
        fi

        start -n network-interface INTERFACE=$INTERFACE
        return 0
    }

#    rm /etc/init/network-interface.override
#    ss="start on net-device-added"
    knets="$(find /run -iname net-\*.conf)"

    if [ -n "$knets" ]; then
        for f in $knets; do
            f=${f%%.conf}; f=${f##/run/net-};

            [ $f != lo ] || continue

#            ss="$ss and net-device-added INTERFACE!=$f" 
#            echo "$ss" > /etc/init/network-interface.override
            do_on_cmdline $f
        done
    fi
end script
